#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Exercises
  description: Springboot + MySQL
  license:
    name: Ibisdicite
host: 192.168.99.101:8086
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    post:
      summary: Crea ejercicio nuevo
      operationId: createExercise
      parameters:
        - name: Exercise
          in: body
          required: true
          description: Exercise Object
          schema:
            $ref: '#/definitions/ExerciseList'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all Exercises
      operationId: getAllExercises
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/ExerciseList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /Exercises/{id}:
    get:
      summary: Returns a Exercise with the given id
      operationId: getExerciseById
      parameters:
        - name: id
          in: path
          description: The id of the Exercise to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Exercise'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a Exercise with the given id
      operationId: updateExercise
      parameters:
        - name: id
          in: path
          description: The id of the Exercise to be updated
          required: true
          type: integer
        - name: Exercise
          in: body
          required: true
          description: Exercise Object
          schema:
            $ref: '#/definitions/ExerciseList'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a Exercise with the given id
      operationId: deleteExercise
      parameters:
        - name: id
          in: path
          description: The id of the Exercise to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Exercise
  Exercise:
    type: object
    properties:
      id:
        type: integer
      leccion:
        type: string
      enunciado:
        type: string
      respuesta:
        type: string
      opc1:
        type: string
      opc2:
        type: string
      opc3:
        type: string
      createdAt:
        type: date
      updatedAt:
        type: date
        

  ExerciseList:
    type: object
    properties:
       properties:
            id:
              type: integer
            leccion:
              type: string
            enunciado:
              type: string
            respuesta:
              type: string
            opc1:
              type: string
            opc2:
              type: string
            opc3:
              type: string
  
  ExerciseList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Exercise'

# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object